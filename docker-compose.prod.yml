# Production overrides for docker-compose.yml
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

version: '3.8'

services:
  db:
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-it_tms}
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    # Remove port exposure in production
    ports: []
    # Add security settings
    command: >
      postgres
      -c ssl=on
      -c ssl_cert_file=/etc/ssl/certs/server.crt
      -c ssl_key_file=/etc/ssl/private/server.key
      -c log_statement=all
      -c log_min_duration_statement=1000

  api:
    environment:
      DATABASE_URL: ${DATABASE_URL}
      PORT: 8080
      JWT_SECRET: ${JWT_SECRET}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      NODE_ENV: production
    restart: unless-stopped
    # Remove port exposure in production (use reverse proxy)
    ports: []
    # Add resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  web:
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
    restart: unless-stopped
    # Remove port exposure in production (use reverse proxy)
    ports: []
    # Add resource limits
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

  # Remove development services
  db-setup:
    profiles: ["dev"]
  
  pgadmin:
    profiles: ["dev"]

volumes:
  pgdata:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/postgresql/data
