# Production overrides for docker-compose.yml
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

services:
  db:
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-it_tms}
    restart: unless-stopped
    # Remove port exposure in production
    ports: []
    # Add security settings
    command: >
      postgres
      -c ssl=off
      -c log_statement=none
      -c log_min_duration_statement=5000
      -c shared_preload_libraries=pg_stat_statements

  # Disable development services in production
  db-setup:
    profiles: ["disabled"]
  
  pgadmin:
    profiles: ["disabled"]

  api:
    environment:
      DATABASE_URL: ${DATABASE_URL}
      PORT: 8080
      JWT_SECRET: ${JWT_SECRET}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      GO_ENV: production
    depends_on:
      - db
    volumes:
      - .:/workspace:ro
    command: >
      sh -c "
        echo 'Waiting for database...';
        until pg_isready -h db -p 5432 -U ${POSTGRES_USER:-postgres}; do sleep 2; done;
        echo 'Applying database migrations...';
        export PGPASSWORD=${POSTGRES_PASSWORD};
        psql -h db -p 5432 -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-it_tms} -f /workspace/db/migrations/0001_init.up.sql;
        psql -h db -p 5432 -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-it_tms} -f /workspace/db/migrations/0002_indexes.up.sql;
        psql -h db -p 5432 -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-it_tms} -f /workspace/db/migrations/0003_add_profile_picture.up.sql;
        psql -h db -p 5432 -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-it_tms} -f /workspace/db/migrations/0004_multiple_assignees.up.sql;
        psql -h db -p 5432 -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-it_tms} -f /workspace/db/migrations/0005_comment_attachments.up.sql;
        psql -h db -p 5432 -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-it_tms} -f /workspace/db/migrations/0006_enhanced_scoring_system.up.sql;
        psql -h db -p 5432 -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-it_tms} -f /workspace/db/migrations/0007_fix_ranking_numbers.up.sql;
        psql -h db -p 5432 -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-it_tms} -f /workspace/db/migrations/0008_effort_fields.up.sql;
        echo 'Starting API...';
        ./server
      "
    restart: unless-stopped
    # Remove port exposure in production (use reverse proxy)
    ports: []
    # Add resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  web:
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      NEXT_TELEMETRY_DISABLED: 1
    restart: unless-stopped
    # Remove port exposure in production (use reverse proxy)
    ports: []
    # Add resource limits
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

volumes:
  pgdata:
    driver: local
